{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","business","className","imageSrc","src","alt","name","address","city","state","zipCode","category","rating","reviewCount","BusinessList","businesses","map","id","sortByOptions","SearchBar","searchYelp","useState","term","setTerm","location","setLocation","sortBy","setSortBy","handleSortByChange","sortByOptionName","target","innerText","console","log","Object","keys","keyName","sortByOption","sortByOptionValue","onClick","placeholder","onChange","value","event","preventDefault","Yelp","search","fetch","headers","Authorization","process","then","response","json","jsonResponse","error","image_url","adress","adress1","zip_code","categories","alias","review_count","App","setBusinesses","text","show","message","setMessage","businessesFound","errorMessage","description","Error","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAqCeA,EA/BE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACM,0BAASC,UAAU,WAAnB,UACI,yBAASA,UAAU,kBAAnB,SACKD,EAASE,SACJ,qBAAKC,IAAKH,EAASE,SAAUE,IAAKJ,EAASK,OAC3C,qBAAKF,IARE,4EAQyBC,IAAI,0BAI9C,6BAAKJ,EAASK,OACd,0BAASJ,UAAU,uBAAnB,UACI,0BAASA,UAAU,mBAAnB,UACI,4BAAID,EAASM,UACb,4BAAIN,EAASO,OACb,8BAAIP,EAASQ,MAAb,IAAqBR,EAASS,cAElC,0BAASR,UAAU,mBAAnB,UACI,6BAAKD,EAASU,WACd,qBAAIT,UAAU,SAAd,UAAwBD,EAASW,OAAjC,YACA,8BAAIX,EAASY,YAAb,wBCTLC,EAZM,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACtB,OACM,oBAAIb,UAAU,eAAd,SACMa,EAAWC,KAAI,SAAAf,GAAQ,OAAI,cAAC,EAAD,CAA4BA,SAAUA,GAAvBA,EAASgB,UCJ3DC,G,MAAgB,CACpB,aAAc,aACd,gBAAiB,SACjB,gBAAiB,iBAsEJC,EAnEG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAEnB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,cAArC,mBAAOK,EAAP,KAAeC,EAAf,KAGMC,EAAqB,SAAC,GAAgB,IACpCC,EADmC,EAAbC,OACIC,UAChCC,QAAQC,IAAIJ,EAAkBX,EAAcW,IAC5CF,EAAUT,EAAcW,KAmC1B,OACM,0BAAS3B,UAAU,YAAnB,UACI,yBAASA,UAAU,yBAAnB,SACI,6BAfCgC,OAAOC,KAAKjB,GAEbF,KAAI,SAAAoB,GACd,IANuBC,EAMjBC,EAAoBpB,EAAckB,GACxC,OACI,oBAA4BlC,WARTmC,EAQuCC,EARvBZ,IAAWW,EAAe,SAAW,IAQME,QAASX,EAAvF,SACGQ,GADME,UAcP,0BAASpC,UAAU,mBAAnB,UACI,uBAAOsC,YAAY,oBAAoBC,SAxC5B,SAAC,GAAgB,IAAdX,EAAa,EAAbA,OAC1BP,EAAQO,EAAOY,QAuCgEA,MAAOpB,IAC1E,uBAAOkB,YAAY,SAASC,SArCb,SAAC,GAAgB,IAAdX,EAAa,EAAbA,OAC9BL,EAAYK,EAAOY,QAoCqDA,MAAOlB,OAEvE,yBAAStB,UAAU,mBAAnB,SACI,mBAAGqC,QApCI,SAACI,GACpBA,EAAMC,iBACNxB,EAAWE,EAAME,EAAUE,GAC3BH,EAAQ,IACRE,EAAY,IACZE,EAAU,eA+BE,4BCpCDkB,EA7BF,CACXC,OADW,SACHxB,EAAME,EAAUE,GACvB,OAAOqB,MAAM,2BAAD,OAA4BzB,EAA5B,qBAA6CE,EAA7C,oBAAiEE,GAAU,CACpFsB,QAAS,CACPC,cAAc,UAAD,OANNC,uIASRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,OAAIA,EAAaC,MACRD,EACCA,EAAavC,WACduC,EAAavC,WAAWC,KAAI,SAAAf,GAAQ,MAAK,CAC9CgB,GAAIhB,EAASgB,GACbd,SAAUF,EAASuD,UACnBlD,KAAML,EAASK,KACfmD,OAAQxD,EAASuB,SAASkC,QAC1BlD,KAAMP,EAASuB,SAAShB,KACxBC,MAAOR,EAASuB,SAASf,MACzBC,QAAST,EAASuB,SAASmC,SAC3BhD,SAAUV,EAAS2D,WAAWC,MAC9BjD,OAAQX,EAASW,OACjBC,YAAaZ,EAAS6D,sBAXnB,OC2BAC,EAlCH,WACV,MAAoC1C,mBAAS,IAA7C,mBAAON,EAAP,KAAmBiD,EAAnB,KACA,EAA8B3C,mBAAS,CAAE4C,KAAM,GAAIC,MAAM,IAAzD,mBAAOC,EAAP,KAAgBC,EAAhB,KAoBA,OACE,uBAAMlE,UAAU,MAAhB,UACE,0CACA,cAAC,EAAD,CAAWkB,WArBI,SAACE,EAAME,EAAUE,GAClC0C,EAAW,CAAEH,KAAM,aAAcC,MAAM,IAEvCrB,EAAKC,OAAOxB,EAAME,EAAUE,GACzByB,MAAK,SAAAkB,GACJ,GAAKA,EAAgBd,MAGd,CACL,IAAMe,EAAY,iBAAaD,EAAgBd,MAAMgB,aACrD,MAAM,IAAIC,MAAMF,GAJhBN,EAAcK,GACdD,EAAW,CAAEH,KAAM,GAAIC,MAAM,OAMhCO,OAAM,SAAAlB,GACLa,EAAW,CAACH,KAAMV,EAAMY,QAASD,MAAM,UAQxCC,EAAQD,KACL,oBAAIhE,UAAU,UAAd,SAAyBiE,EAAQF,OACjC,cAAC,EAAD,CAAclD,WAAYA,QCtBrB2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.df73f661.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Business.css'\r\n\r\nconst imageNotAvailableUrl = \"https://cuponeaya.mx/wp-content/uploads/2022/02/image-not-available-1.png\"\r\n\r\nconst Business = ({ business }) => {\r\n  return (\r\n        <article className=\"Business\">\r\n            <section className=\"image-container\">\r\n                {business.imageSrc\r\n                    ? <img src={business.imageSrc} alt={business.name}/>\r\n                    : <img src={imageNotAvailableUrl} alt='image not available'/>\r\n                }\r\n                \r\n            </section>\r\n            <h2>{business.name}</h2>\r\n            <section className=\"Business-information\">\r\n                <section className=\"Business-address\">\r\n                    <p>{business.address}</p>\r\n                    <p>{business.city}</p>\r\n                    <p>{business.state} {business.zipCode}</p>\r\n                </section>\r\n                <section className=\"Business-reviews\">\r\n                    <h3>{business.category}</h3>\r\n                    <h3 className=\"rating\">{business.rating} stars</h3>\r\n                    <p>{business.reviewCount} reviews</p>\r\n                </section>\r\n            </section>\r\n        </article>\r\n  )\r\n}\r\n\r\nBusiness.propTypes = {\r\n    business: PropTypes.object\r\n}\r\n\r\nexport default Business\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './BusinessList.css'\r\nimport Business from '../Business/Business'\r\n\r\nconst BusinessList = ({ businesses }) => {\r\n  return (\r\n        <ul className=\"BusinessList\">\r\n            { businesses.map(business => <Business key={business.id} business={business}/>) }\r\n        </ul>\r\n  )\r\n}\r\n\r\nBusinessList.propTypes = {\r\n  businesses: PropTypes.array\r\n}\r\n\r\nexport default BusinessList\r\n","import { useState, React } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './SearchBar.css'\r\n\r\nconst sortByOptions = {\r\n  'Best Match': 'best_match',\r\n  'Highest Rated': 'rating',\r\n  'Most Reviewed': 'review_count'\r\n}\r\n\r\nconst SearchBar = ({ searchYelp }) => {\r\n  //  States\r\n  const [term, setTerm] = useState('')\r\n  const [location, setLocation] = useState('')\r\n  const [sortBy, setSortBy] = useState('best_match')\r\n\r\n  //  Handlers\r\n  const handleSortByChange = ({ target }) => {\r\n    const sortByOptionName = target.innerText\r\n    console.log(sortByOptionName, sortByOptions[sortByOptionName])\r\n    setSortBy(sortByOptions[sortByOptionName])\r\n  }\r\n\r\n  const handleTermChange = ({ target }) => {\r\n    setTerm(target.value)\r\n  }\r\n\r\n  const handleLocationChange = ({ target }) => {\r\n    setLocation(target.value)\r\n  }\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault()\r\n    searchYelp(term, location, sortBy)\r\n    setTerm('')\r\n    setLocation('')\r\n    setSortBy('best_match')\r\n  }\r\n\r\n  //  Helpers\r\n  const getSortByClassName = sortByOption => sortBy === sortByOption ? 'active' : ''\r\n\r\n  const renderSortByOptions = () => {\r\n    const keys = Object.keys(sortByOptions)\r\n\r\n    return keys.map(keyName => {\r\n      const sortByOptionValue = sortByOptions[keyName]\r\n      return (\r\n          <li key={sortByOptionValue} className={getSortByClassName(sortByOptionValue)} onClick={handleSortByChange}>\r\n            {keyName}\r\n          </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n        <article className=\"SearchBar\">\r\n            <section className=\"SearchBar-sort-options\">\r\n                <ul>\r\n                    {renderSortByOptions()}\r\n                </ul>\r\n            </section>\r\n            <section className=\"SearchBar-fields\">\r\n                <input placeholder=\"Search Businesses\" onChange={handleTermChange} value={term}/>\r\n                <input placeholder=\"Where?\" onChange={handleLocationChange} value={location}/>\r\n            </section>\r\n            <section className=\"SearchBar-submit\">\r\n                <a onClick={handleSearch}>Let&apos;s Go</a>\r\n            </section>\r\n        </article>\r\n  )\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  searchYelp: PropTypes.func\r\n}\r\n\r\nexport default SearchBar\r\n","const apiKey = process.env.REACT_APP_APIKEY\r\n\r\nconst Yelp = {\r\n  search (term, location, sortBy) {\r\n   return fetch(`/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n        if (jsonResponse.error) {\r\n          return jsonResponse\r\n        } else if(jsonResponse.businesses) {\r\n          return jsonResponse.businesses.map(business => ({\r\n            id: business.id,\r\n            imageSrc: business.image_url,\r\n            name: business.name,\r\n            adress: business.location.adress1,\r\n            city: business.location.city,\r\n            state: business.location.state,\r\n            zipCode: business.location.zip_code,\r\n            category: business.categories.alias,\r\n            rating: business.rating,\r\n            reviewCount: business.review_count\r\n          }))\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport default Yelp\r\n","import { useState, React } from 'react'\r\nimport './App.css'\r\nimport BusinessList from '../BusinessList/BusinessList'\r\nimport SearchBar from '../SearchBar/SearchBar'\r\nimport Yelp from '../../util/Yelp'\r\n\r\nconst App = () => {\r\n  const [businesses, setBusinesses] = useState([])\r\n  const [message, setMessage] = useState({ text: '', show: false })\r\n\r\n  const searchYelp = (term, location, sortBy) => {\r\n    setMessage({ text: 'Loading...', show: true })\r\n\r\n    Yelp.search(term, location, sortBy)\r\n      .then(businessesFound => {\r\n        if (!businessesFound.error) {\r\n          setBusinesses(businessesFound)\r\n          setMessage({ text: '', show: false })\r\n        } else {\r\n          const errorMessage = `Sorry. ${businessesFound.error.description}`\r\n          throw new Error(errorMessage)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setMessage({text: error.message, show: true})\r\n      })\r\n  }\r\n\r\n  return (\r\n    <main className=\"App\">\r\n      <h1>ravenous</h1>\r\n      <SearchBar searchYelp={searchYelp}/>\r\n      {message.show\r\n        ? <h2 className='message'>{message.text}</h2>\r\n        : <BusinessList businesses={businesses}/>\r\n      }\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}